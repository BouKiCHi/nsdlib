
#title	"Rest mode test sample"

#Code	"../../bin/nsd.bin"

#bgm	6

#timebase	48

#QMax	100

#QReverse

E(16){15 D2 14 D1 13 D1 12 D1 11 D1 10 D1 9 D1 8 D1 7 D1 L 6 D5 5 D5 R 5 4 3 2 1 5 6 D2 5 D2 4 D2 3 D2 2 D2 L 1}
E(17){15 15 14 14 13 D2 12 D2 11 D1 10 D1 9 D1 8 D1 L 7 R 4 3 2 1 L 5 6 5 5 4 4 3 2 1 4 4 3 3 2 2 1}
E(18){15 12 9 7 5 4 3 2 1 8 6 5 4 3 2 2 1 1 5 4 3 3 2 2 1 1 1 L 3 2 2 2 1 1 1 1}





/*
------------+--------------------------------------------------------------
Command     |  取説URL
------------+--------------------------------------------------------------
Rm, R@, Rv  |  http://shaw.la.coocan.jp/nsdl/doc/mml_release.html        ゲートタイムの処理
r, w        |  http://shaw.la.coocan.jp/nsdl/doc/mml_rest.html           休符（＋その処理は臨時記号で）
K{}         |  http://shaw.la.coocan.jp/nsdl/doc/mml_KeySignature.html   自動で臨時記号を付けるコマンド
------------+--------------------------------------------------------------
*/



//----------+--------------------------------------------------------------
// Command  |  取説URL
//----------+--------------------------------------------------------------
            //  http://shaw.la.coocan.jp/nsdl/doc/mml.html
#rest   0   //  r コマンド（休符r）のデフォルトの処理方法（音量＝０）
//----------+--------------------------------------------------------------
bgm(0)
{
    t120	l4	o4	Ev17	
            @0

            Rm0     //ゲートタイムの処理    ：音量＝０

        q75 cdef | edcr | efga | gfer
            crcr | crcr | l8 ccddeeff | erdr c2
}



//----------+--------------------------------------------------------------
// Command  |  取説URL
//----------+--------------------------------------------------------------
            //  http://shaw.la.coocan.jp/nsdl/doc/mml.html
#rest   1   //  r コマンド（休符r）のデフォルトの処理方法（Rv, R@コマンド値）
//----------+--------------------------------------------------------------
bgm(1)
{
    t120	l4	o4	Ev17	
            @0

            Rm1 Rv3 R@2 //ゲートタイムの処理    ：音量＝３、音色＝２（リリースエンベロープ無効）

        q75 cdef | edcr | efga | gfer
            crcr | crcr | l8 ccddeeff | erdr c2
}



//----------+--------------------------------------------------------------
// Command  |  取説URL
//----------+--------------------------------------------------------------
            //  http://shaw.la.coocan.jp/nsdl/doc/mml.html
#rest   2   //  r コマンド（休符r）のデフォルトの処理方法（リリースエンベロープを適用）（デフォルト）
//----------+--------------------------------------------------------------
bgm(2)
{
    t120	l4	o4	Ev17	
            @0

            Rm2     //ゲートタイムの処理    ：リリースエンベロープを適用（デフォルト）

        q75 cdef | edcr | efga | gfer
            crcr | crcr | l8 ccddeeff | erdr c2
}



//----------+--------------------------------------------------------------
// Command  |  取説URL
//----------+--------------------------------------------------------------
            //  http://shaw.la.coocan.jp/nsdl/doc/mml.html
#rest   3   //  r コマンド（休符r）のデフォルトの処理方法（Rmコマンドのモードに従う）
//----------+--------------------------------------------------------------
/*
	この休符のモード３は、休符時の挙動も、
	Rmコマンド（http://shaw.la.coocan.jp/nsdl/doc/mml_release.html）
	の設定値に従うモードです。

	後追いで追加実装したモードですが、Rmコマンドで、
	『ゲートタイム』及び『休符』の両方の挙動を設定できるので、
	このモードが便利だと思います。
*/
bgm(3)
{
    t120	l4	o4	Ev17	
            @0

            Rm1 Rv3 R@2 //ゲートタイムの処理    ：音量＝３、音色＝２（リリースエンベロープ無効）

        q75 cdef | edcr | efga | gfer

			Rm2			//ゲートタイムの処理    ：リリースエンベロープを適用

            crcr | crcr | l8 ccddeeff | erdr c2
}



//----------+--------------------------------------------------------------
// Command  |  取説URL
//----------+--------------------------------------------------------------
            //  http://shaw.la.coocan.jp/nsdl/doc/mml.html
#rest   0   //  r コマンド（休符r）のデフォルトの処理方法（音量＝０）
//----------+--------------------------------------------------------------
/*
	『ゲートタイム』の挙動と、『休符』の挙動を別々のモードに設定する効果です。
	『ゲートタイム』時はリリースエンベロープに従い、
	『休符』時は、音量を０にします。
*/
bgm(4)
{
    t120	l4	o4	Ev17	
            @0

            Rm2     //ゲートタイムの処理    ：リリースエンベロープを適用

        q75 cdef | edcr | efga | gfer
            crcr | crcr | l8 ccddeeff | erdr c2
}



//----------+--------------------------------------------------------------
// Command  |  取説URL
//----------+--------------------------------------------------------------
            //  http://shaw.la.coocan.jp/nsdl/doc/mml.html
#rest   1   //  r コマンド（休符r）のデフォルトの処理方法（Rv, R@コマンド値）
#wait   0   //  w コマンド（休符w）のデフォルトの処理方法（音量＝０）
//----------+--------------------------------------------------------------
/*
Rmコマンドや、休符のモードは、以下のように、リリースパターンが定義されていない
音量エンベロープを用いる場合においても、疑似的に残響が得るための機能として
実装しました。
ゲーム等の組み込み時において、曲データのサイズ節約を図ることが可能です。
*/
bgm(5)
{
    t120	l4	o4	Ev18	//リリースパターンが定義されていない音量エンベロープ
            @0

            Rm1 Rv2 R@0     //ゲートタイムの処理    ：音量＝２、音色＝０（リリースエンベロープ無効）

        q75 cdef | edcr | efga | gfer
            cwcw | cwcw | l8 ccddeeff | ewdw c2
}

